# A for loop to generate adjusted R2 values for a several observations across several groups of samples

library(pheatmap)
library(tidyverse)

#input data is samples in rows and observations in columns

# remove unwanted samples
data <- data %>% filter(!grepl(c("xs"), sample))

# generate metadata
data <- data %>% separate(sample, into=c("site", "hyg" ,"age", "sex", "rep"), remove=F) 

# generate long data 
all_data_long <- data %>% gather(metabolite, value, -sample, -site, -hyg, -age, -sex, -rep)

# generate variables required for subsetting
all_data_long_site <- all_data_long %>% unite(site_meta, "site", "metabolite")#mutate(all_data_long, site_meta = paste(site, metabolite, sep="_"))
all_data_long_site_age <- all_data_long_site %>% unite(site_meta_age, "site_meta", "age")
all_data <- all_data_long_site_age %>% arrange(site_meta_age)

rsq.outs <- data.frame();
for (i in unique(all_data_long$metabolite) ){
    #create a subset data 
    data_sub <- subset(all_data_long,metabolite==i)
    # filter non-zeros
    data_sub <- filter(data_sub, value > 0)
    # scale data
    data_sub <- data_sub %>% mutate(across(where(is.numeric), scale))
    # perform ANOVA across variables of interest
    lm <- lm(value ~ hyg + age + sex + site, data=data_sub, na.rm=T)
    # calculate adjusted R2
    rsq <- as.data.frame(rsq.partial(lm, adj=T))
    # pull information and store in DF
    rsq_adj <- rsq$adjustment
    rsq_var <- rsq$variable
    rsq_val <- rsq$partial.rsq
    rsq.out <- data.frame(i, rsq_var, rsq_val)
    # bind data into prepared DF
    rsq.outs <- rbind.data.frame(rsq.outs, rsq.out)
}

# Code to generate heatmap of R2 values

# generate wide data
rsq.outs.wide <- spread(rsq.outs, i, rsq_val)
rsq.outs.wide <- as.data.frame(t(rsq.outs.wide))
rsq.outs.wide <- as.data.frame(row_to_names(rsq.outs.wide, 1))

# change character values to numeric
char_columns <- sapply(rsq.outs.wide, is.character)            
data_chars_as_num <- rsq.outs.wide                             
data_chars_as_num[ , char_columns] <- as.data.frame(   
  apply(data_chars_as_num[ , char_columns], 2, as.numeric))
sapply(data_chars_as_num, class)

# generate heatmap

hm <- pheatmap(mat=data_chars_as_num,
         main = " Partial R2 by Factor across Sites", 
         #scale="row",
         #border_colour = "white",
         cluster_cols=F,
         cluster_rows=F,
         display_numbers = T,
         #gaps_col = c(4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52),
         color=inferno(8))
hm
